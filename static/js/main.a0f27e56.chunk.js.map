{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAEaA,G,kBAAK,SAAAC,GACd,OAAQ,sBAAKC,UAAU,iBAAf,UACR,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,0BACtB,mCAAML,EAAMI,QAAQE,QACpB,kCAAKN,EAAMI,QAAQG,cCHVC,EAAS,SAACR,GACnB,OAAO,qBAAKC,UAAU,YAAf,SACND,EAAMS,SAASC,KAAI,SAACN,GAAD,OAChB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCFdM,G,MAAU,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAYC,EAAiB,EAAjBA,aACjC,OAAO,uBAAOC,KAAK,SAASb,UAAU,SAASW,YAAaA,EAAaG,SAAUF,MCgCxEG,E,kDAhCb,aAAe,IAAD,8BACZ,gBAcFH,aAAa,SAAAI,GAAC,OAAM,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbxD,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAY,IAJF,E,gEAQO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKT,SAAS,CAAET,SAAUkB,S,+BAKtB,IAAD,EACyBC,KAAKN,MAA7Bb,EADD,EACCA,SAASU,EADV,EACUA,YACXU,EAAiBpB,EAASqB,QAAO,SAAAb,GAAC,OAAEA,EAAEX,KAAKyB,cAAcC,SAASb,EAAYY,kBACpF,OACE,sBAAK9B,UAAU,MAAf,UACA,kDACD,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAce,KAAKf,eACzD,cAAC,EAAD,CAAUJ,SAAUoB,W,GAzBVI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a0f27e56.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\nexport const Card=props=>{\r\n    return  <div className=\"card-container\">\r\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set3&size180x80`}/>\r\n    <h1> {props.monster.name}</h1>\r\n    <p> {props.monster.email}</p>\r\n    </div>\r\n}","import  React from 'react';\r\nimport './card-list.styles.css'\r\nimport { Card } from \"../card/card.component\";\r\nexport const CardList=(props)=>{\r\n    return <div className=\"card-list\">\r\n    {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster}/>\r\n      ))}</div>;\r\n}","import  React from 'react';\r\n\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox=({placeholder,handleChange})=> {\r\n    return <input type=\"search\" className=\"search\" placeholder={placeholder} onChange={handleChange} />\r\n}","import \"./App.css\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { Component } from \"react\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField:''\n    };\n    //this.handleChange=this.handleChange.bind(this);\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((users) => {\n        this.setState({ monsters: users });\n      });\n  }\n  handleChange=e=>    this.setState({ searchField: e.target.value });\n  \n  render() {\n    const { monsters,searchField } =this.state;\n    const filteredMonsters=monsters.filter(e=>e.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\">\n      <h1>Monsters RoleBox</h1>\n     <SearchBox placeholder=\"Search Monsters\" handleChange={this.handleChange}/>\n        <CardList monsters={filteredMonsters}>\n       \n        </CardList>\n        \n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}